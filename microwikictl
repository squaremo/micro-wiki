#!/bin/bash

set -e

APP="pages1 pages2 preso"
ONEHOST="etcd prom dash redis"
PERHOST="conf bal"
HIDE_FROM_SCOPE="-l works.weave.role=system"
export ETCD_ADDRESS="http://etcd:4001"
export PROM_ADDRESS="http://prom:9090"

VERSION=${VERSION:-latest}

switch_to_weave_proxy() {
    eval `weave env`
}

reg_service() {
    local service=$1
    local ipaddr=$2
    local port=$3
    local image=$4
    weave dns-add $ipaddr weave -h $service.weave.local
    echo amberctl service $service $ipaddr $port --fixed 80 --docker-image=$image
    docker run --rm \
        -e ETCD_ADDRESS \
        squaremo/ambergreen-amberctl service $service $ipaddr $port --protocol http --fixed 80 --docker-image=$image
}

do_up() {
    switch_to_weave_proxy
    for c in "$@"; do
        echo Starting $c ...
        case $c in
            pages*)
                # pages service
                docker run -d --name $c \
                    -e INSTANCE=$c \
                    -e REDIS_SVC=redis-svc.weave.local \
                    --hostname pages.weave.local squaremo/microwiki-pages:$VERSION
                ;;
            preso)
                # preso front end
                docker run -d --name preso --restart=always \
                    -e PAGES_SVC=pages-svc.weave.local \
                    -p 8080:80 --hostname preso.weave.local squaremo/microwiki-preso
                ;;
            prom)
                # prometheus
                docker run -d --name prom \
                    -v `pwd`/prom:/etc/prometheus -p 9090:9090 \
                    -h prom.weave.local \
                    $HIDE_FROM_SCOPE \
                    prom/prometheus:master
                ;;
            redis)
                docker run -d --name redis \
                    --hostname redis-svc.weave.local \
                    litaio/redis
                ;;
            conf)
                reg_service pages-svc 10.128.0.5 80 squaremo/microwiki-pages || true
                docker run -d --name conf \
                    -h conf.weave.local \
                    $HIDE_FROM_SCOPE \
                    -e ETCD_ADDRESS \
                    -v /var/run/weave/weave.sock:/var/run/docker.sock \
                    squaremo/ambergreen-agent
                ;;
            bal)
                echo Giving host a weave IP ...
                HOST_IP=$(weave expose)
                weave dns-add $HOST_IP weave -h stats.weave.local
                # Running in the host network stack rather than on the
                # weave network, so name resolution won't work
                local etcd_ip=$(weave dns-lookup etcd)
                docker run --name bal \
                    -d --net=host --privileged \
                    $HIDE_FROM_SCOPE \
                    -e ETCD_ADDRESS=http://$etcd_ip:4001 \
                    squaremo/ambergreen-balancer --expose-prometheus :9000
                ;;
            dash)
                docker run -d --name dash \
                    $HIDE_FROM_SCOPE \
                    -e ETCD_ADDRESS \
                    -e PROM_ADDRESS \
                    -p 3000:7070 \
                    squaremo/ambergreen-web
                ;;
            etcd)
                docker run -d --name etcd \
                    -h etcd.weave.local \
                    $HIDE_FROM_SCOPE \
                    quay.io/coreos/etcd \
                    -advertise-client-urls $ETCD_ADDRESS \
                    -listen-client-urls http://0.0.0.0:4001
                ;;
            *)
                echo "Sorry which service?" >&2
        esac
    done
}

do_down() {
    for c in "$@"; do
        echo Stopping $c ...
        docker rm -f $c || true
    done
}

do_load() {
    switch_to_weave_proxy
    docker rm -f load || true
    docker run --name load squaremo/microwiki-load
}

COMMAND=$1
shift 1
ARGS="$@"
if [ -z "$ARGS" ]; then
    ARGS="$APP $PERHOST"
fi

case $COMMAND in
    up)
        do_up $ARGS
        ;;
    down)
        do_down $ARGS
        ;;
    restart)
        do_down $ARGS
        do_up $ARGS
        ;;
    load)
        do_load
        ;;
    enlist-host)
        echo Starting weave router ...
        weave launch-router "$@"
        echo Starting weave proxy ...
        weave launch-proxy --rewrite-inspect \
            -H tcp://0.0.0.0:12375 -H unix:///var/run/weave/weave.sock
        ;;
    forget-host)
        echo Stopping weave ...
        weave stop
        ;;
    start-infra)
        do_up $ONEHOST
        ;;
    stop-infra)
        do_down $ONEHOST
        ;;
    restart-infra)
        do_down $ONEHOST
        do_up $ONEHOST
        ;;
    *)
        echo Unrecognised command "$1"
        ;;
esac
